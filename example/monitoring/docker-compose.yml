version: "3.3"
services:
  app:
    build:
      context: ./../../
      dockerfile: example/monitoring/Dockerfile
      target: app
    restart: always
    networks:
      - app-net
    ports:
      - 8087:8087
      - 8088:8088

  prometheus:
    image: prom/prometheus:v2.39.1
    ports:
      - 9000:9090
    networks:
      - app-net
    depends_on:
      - app
    volumes:
      - ./config/prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config/grafana/config.monitoring
    networks:
      - app-net
    restart: always

  pooler:
    image: curlimages/curl:latest
    depends_on:
      - app
    networks:
      - app-net
    command: /bin/sh -c "while true; do curl -X GET \"http://app:8088/\"; sleep 5s; done"
    restart: always

networks:
  app-net:
